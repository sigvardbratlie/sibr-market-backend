options:
  logging: CLOUD_LOGGING_ONLY

steps:
# STEP 0: Check the commit message.
- name: 'gcr.io/cloud-builders/git' # <-- THIS IS THE FIX. Use the official git image.
  id: 'Check-commit-message'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    commit_message=$(git log -1 --pretty=%B "${COMMIT_SHA}")
    if [[ ! "$commit_message" =~ "gcloud build" ]]; then
      echo "Keyword 'gcloud build' is missing. Failing build."
      exit 1
    else
      echo "Keyword found. Proceeding with build."
    fi

# ---- STEG 1: Bygg alle tre imagene (parallelt) ----
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-scraping'
  args:
    - 'build'
    - '-t'
    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}'
    - './scraping'

- name: 'gcr.io/cloud-builders/docker'
  id: 'build-geocoding'
  args:
    - 'build'
    - '-t'
    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}'
    - './geocoding'

- name: 'gcr.io/cloud-builders/docker'
  id: 'build-modeling'
  args:
    - 'build'
    - '-t'
    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}'
    - './modeling'

# ---- STEG 2: Push alle tre imagene til Artifact Registry ----
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-scraping'
  waitFor: ['build-scraping']
  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}']

- name: 'gcr.io/cloud-builders/docker'
  id: 'push-geocoding'
  waitFor: ['build-geocoding']
  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}']

- name: 'gcr.io/cloud-builders/docker'
  id: 'push-modeling'
  waitFor: ['build-modeling']
  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}']


# ---- STEG 3: Kompiler pipeline-definisjonen ----
- name: 'python:3.11'
  id: 'compile-pipeline'
  waitFor: ['push-scraping', 'push-geocoding', 'push-modeling']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    pip install -r requirements.txt && \
    python pipelines/pipeline.py


# ---- STEG 4: Opprett eller oppdater tidsplanen for pipelinen ----
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'schedule-pipeline'
  waitFor: ['compile-pipeline']
  entrypoint: 'gcloud'
  args:
    - 'ai'
    - 'pipeline-jobs'
    - 'create'
    - '--project=sibr-market'
    - '--location=europe-west1'
    - '--display-name=sibr-market-scheduled-run'
    - '--template-uri=sibr_market_pipeline.json'
    # ---- Her er magien! Velg ETT av schedule-flaggene under ----

    # Eksempel 1: Hver 3. dag kl. 02:00
    - '--schedule=0 2 */3 * *'

    # Eksempel 2: Mandag, onsdag, fredag kl. 02:00 (kommenter ut den over)
    #- '--schedule=0 2 * * 1,3,5'

    - '--schedule-time-zone=Europe/Oslo'
    # Lag en JSON-string med parametere for Ã¥ sende inn den unike taggen
    - |
      --pipeline-root=gs://sibr-market
    - |
      --schedule-pipeline-parameters-json={
          "scraping_image": "europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}",
          "geocoding_image": "europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}",
          "mldata_image": "europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}"
      }

images:
- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}'
- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}'
- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}'