options:
  logging: CLOUD_LOGGING_ONLY


steps:
# STEP 0: Check the commit message.
- name: 'gcr.io/cloud-builders/git' # <-- THIS IS THE FIX. Use the official git image.
  id: 'Check-commit-message'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    commit_message=$(git log -1 --pretty=%B "${COMMIT_SHA}")
    if [[ ! "$commit_message" =~ "gcloud build" ]]; then
      echo "Keyword 'gcloud build' is missing. Failing build."
      exit 1
    else
      echo "Keyword found. Proceeding with build."
    fi

## ---- STEG 1: Build the Docker images in parallel ----
#- name: 'gcr.io/cloud-builders/docker'
#  id: 'build-scraping'
#  args:
#    - 'build'
#    - '-t'
#    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}'
#    - './scraping'

#- name: 'gcr.io/cloud-builders/docker'
#  id: 'build-geocoding'
#  args:
#    - 'build'
#    - '-t'
#    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}'
#    - './geocoding'

#- name: 'gcr.io/cloud-builders/docker'
#  id: 'build-modeling'
#  args:
#    - 'build'
#    - '-t'
#    - 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}'
#    - './modeling'

## ---- STEP 2: Push to Artifact Registry ----
#- name: 'gcr.io/cloud-builders/docker'
#  id: 'push-scraping'
#  waitFor: ['build-scraping']
#  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}']

#- name: 'gcr.io/cloud-builders/docker'
#  id: 'push-geocoding'
#  waitFor: ['build-geocoding']
#  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}']

#- name: 'gcr.io/cloud-builders/docker'
#  id: 'push-modeling'
#  waitFor: ['build-modeling']
#  args: ['push', 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}']

## ---- STEG 3: Compile the pipeline ----
#- name: 'python:3.11'
#  id: 'compile-pipeline'
#  waitFor: ['push-scraping', 'push-geocoding', 'push-modeling']
#  entrypoint: 'bash'
#  args:
#  - '-c'
#  - |
#    sed -i "s|SCRAPING_IMAGE_PLACEHOLDER|europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}|g" pipelines/pipeline.py
#    sed -i "s|GEOCODING_IMAGE_PLACEHOLDER|europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}|g" pipelines/pipeline.py
#    sed -i "s|MODELING_IMAGE_PLACEHOLDER|europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}|g" pipelines/pipeline.py

#    # N책, installer dependencies og kompiler filen som n책 har de korrekte URI-ene
#    pip install -r pipelines/requirements.txt && \
#    python pipelines/pipeline.py

# ---- STEP 4: Opprett eller Oppdater Schedule med gcloud (KORRIGERT) ----
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'submit-or-update-pipeline-schedule'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e

      SCHEDULE_NAME="sibr-market-schedule"
      REGION="europe-west1"
      PIPELINE_SPEC_URI="gs://sibr-market/sibr_market_pipeline.json"
      CRON_EXPRESSION="0 2 */3 * *"

      echo "Checking for existing schedule: \${SCHEDULE_NAME}"

      # Bruker \\ escaping for 책 unng책 at Cloud Build feiltolker filteret
      SCHEDULE_ID=$(gcloud ai pipeline-schedules list \
        --region=\${REGION} \
        --filter="displayName=\${SCHEDULE_NAME}" \
        --format="value(name)" || true)

      if [[ -n "\${SCHEDULE_ID}" ]]; then
        echo "Schedule exists. Updating pipeline spec."
        gcloud ai pipeline-schedules update \${SCHEDULE_ID} \
          --pipeline-spec-uri=\${PIPELINE_SPEC_URI} \
          --region=\${REGION}
        
        echo "Schedule successfully updated."
      else
        echo "Schedule does not exist. Creating a new one."
        gcloud ai pipeline-schedules create \
          --display-name=\${SCHEDULE_NAME} \
          --cron="\${CRON_EXPRESSION}" \
          --pipeline-spec-uri=\${PIPELINE_SPEC_URI} \
          --region=\${REGION}
          
        echo "Schedule successfully created."
      fi
#
#images:
#- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/scraping:${COMMIT_SHA}'
#- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/geocoding:${COMMIT_SHA}'
#- 'europe-west1-docker.pkg.dev/sibr-market/sibr-market-repo/modeling:${COMMIT_SHA}'